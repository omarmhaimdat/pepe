name: CI

on:
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        target: [
          x86_64-unknown-linux-gnu,
          aarch64-unknown-linux-gnu,
          x86_64-apple-darwin,
          aarch64-apple-darwin
        ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install -y build-essential devscripts debhelper gcc-aarch64-linux-gnu gcc-x86-64-linux-gnu

      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install gcc aarch64-elf-gcc
          xcode-select --install || true

      - name: Set environment variables (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          echo "CC=clang" >> $GITHUB_ENV
          echo "CARGO_TARGET_X86_64_APPLE_DARWIN_LINKER=clang" >> $GITHUB_ENV
          echo "CARGO_TARGET_AARCH64_APPLE_DARWIN_LINKER=clang" >> $GITHUB_ENV

      - name: Build project (Ubuntu)
        if: matrix.os == 'ubuntu-latest' && (matrix.target == 'x86_64-unknown-linux-gnu' || matrix.target == 'aarch64-unknown-linux-gnu')
        run: cargo build --release --target ${{ matrix.target }}

      - name: Build project (macOS)
        if: matrix.os == 'macos-latest' && (matrix.target == 'x86_64-apple-darwin' || matrix.target == 'aarch64-apple-darwin')
        run: cargo build --release --target ${{ matrix.target }}
        env:
          RUSTFLAGS: "-C linker=clang"

      - name: Package Debian (Ubuntu)
        if: matrix.os == 'ubuntu-latest' && (matrix.target == 'x86_64-unknown-linux-gnu' || matrix.target == 'aarch64-unknown-linux-gnu')
        run: |
          mkdir -p pepe/debian
          cat <<EOF > pepe/debian/control
          Source: pepe
          Section: utils
          Priority: optional
          Maintainer: Omar MHAIMDAT <omarmhaimdat@gmail.com>
          Build-Depends: debhelper (>= 9), cargo
          Standards-Version: 3.9.6
          Homepage: https://github.com/omarmhaimdat/pepe
          Package: pepe
          Architecture: any
          Depends: ${shlibs:Depends}, ${misc:Depends}
          Description: HTTP load generator
           Pepe is a command-line HTTP load generator.
          EOF

          cat <<EOF > pepe/debian/rules
          #!/usr/bin/make -f
          %:
          \tdh $@
          override_dh_auto_build:
          \tcargo build --release
          override_dh_auto_install:
          \tinstall -D target/release/pepe \$(DESTDIR)/usr/bin/pepe
          EOF

          cat <<EOF > pepe/debian/changelog
          pepe (0.1.0) unstable; urgency=low
            * Initial release
           -- Omar MHAIMDAT <omarmhaimdat@gmail.com>  $(date -R)
          EOF

          chmod +x pepe/debian/rules
          debuild -us -uc

      - name: Upload Debian Package
        if: matrix.os == 'ubuntu-latest' && (matrix.target == 'x86_64-unknown-linux-gnu' || matrix.target == 'aarch64-unknown-linux-gnu')
        uses: actions/upload-artifact@v4
        with:
          name: pepe-debian
          path: ../pepe_*.deb

      - name: Package Homebrew (macOS)
        if: matrix.os == 'macos-latest' && (matrix.target == 'x86_64-apple-darwin' || matrix.target == 'aarch64-apple-darwin')
        run: |
          cargo build --release --target ${{ matrix.target }}
          ls target/release
          tar -czvf pepe-macos.tar.gz -C target/release pepe

      - name: Upload Homebrew Package
        if: matrix.os == 'macos-latest' && (matrix.target == 'x86_64-apple-darwin' || matrix.target == 'aarch64-apple-darwin')
        uses: actions/upload-artifact@v4
        with:
          name: pepe-homebrew
          path: pepe-macos.tar.gz

  release:
    if: github.ref == 'refs/heads/master'
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Debian Package
        uses: actions/download-artifact@v2
        with:
          name: pepe-debian
          path: ./artifacts

      - name: Download Homebrew Package
        uses: actions/download-artifact@v2
        with:
          name: pepe-homebrew
          path: ./artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.sha }}
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload Debian Package to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/pepe_*.deb
          asset_name: pepe_ubuntu.deb
          asset_content_type: application/octet-stream

      - name: Upload Homebrew Package to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/pepe-macos.tar.gz
          asset_name: pepe_macos.tar.gz
          asset_content_type: application/octet-stream
